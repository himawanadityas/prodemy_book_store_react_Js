{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\src\\\\DemoPages\\\\Charts\\\\Gauges\\\\Examples\\\\justGage.js\";\nimport React, { Fragment } from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { Row, Col, Card, CardBody, CardTitle } from 'reactstrap';\nimport Gauge from 'react-svg-gauge';\n\nfunction getHexColor(value) {\n  var string = value.toString(16);\n  return string.length === 1 ? '0' + string : string;\n}\n\nvar ChartsjustGageExample = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChartsjustGageExample, _React$Component);\n\n  function ChartsjustGageExample(props) {\n    var _this;\n\n    _classCallCheck(this, ChartsjustGageExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartsjustGageExample).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState({\n        value: parseInt(e.currentTarget.value, 10)\n      });\n    };\n\n    _this.state = {\n      value: 50\n    };\n    return _this;\n  }\n\n  _createClass(ChartsjustGageExample, [{\n    key: \"render\",\n    value: function render() {\n      var r = Math.floor(this.state.value * 2.55);\n      var g = Math.floor(255 - this.state.value * 2.55);\n      var b = 0;\n      var colorHex = '#' + getHexColor(r) + getHexColor(g) + getHexColor(b);\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, \"justGage\"), /*#__PURE__*/React.createElement(Row, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Gauge, {\n        value: this.state.value,\n        width: 200,\n        height: 160,\n        color: colorHex,\n        label: \"Example 1\",\n        valueFormatter: function valueFormatter(value) {\n          return \"\".concat(value, \"%\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Gauge, {\n        value: this.state.value,\n        width: 200,\n        height: 160,\n        label: \"Example 2\",\n        color: \"#3f6ad8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Gauge, {\n        value: this.state.value,\n        width: 200,\n        height: 160,\n        label: \"Example 3\",\n        color: \"#3ac47d\",\n        valueFormatter: function valueFormatter(value) {\n          if (value > 80) {\n            return '😁';\n          }\n\n          if (value > 20) {\n            return '😒';\n          }\n\n          return '😣';\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: this.state.value,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }))))))));\n    }\n  }]);\n\n  return ChartsjustGageExample;\n}(React.Component);\n\nexport { ChartsjustGageExample as default };","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Charts/Gauges/Examples/justGage.js"],"names":["React","Fragment","CSSTransitionGroup","Row","Col","Card","CardBody","CardTitle","Gauge","getHexColor","value","string","toString","length","ChartsjustGageExample","props","onChange","e","setState","parseInt","currentTarget","state","r","Math","floor","g","b","colorHex","Component"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle\n} from 'reactstrap';\n\nimport Gauge from 'react-svg-gauge';\n\nfunction getHexColor(value) {\n    let string = value.toString(16);\n    return (string.length === 1) ? '0' + string : string;\n}\n\nexport default class ChartsjustGageExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 50,\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({value: parseInt(e.currentTarget.value, 10)});\n    };\n\n    render() {\n        let r = Math.floor(this.state.value * 2.55);\n        let g = Math.floor(255 - (this.state.value * 2.55));\n        let b = 0;\n        let colorHex = '#' + getHexColor(r) + getHexColor(g) + getHexColor(b);\n        return (\n            <Fragment>\n                <CSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>justGage</CardTitle>\n                                    <Row className=\"text-center\">\n                                        <Col md=\"6\" lg=\"4\">\n                                            <Gauge value={this.state.value} width={200} height={160}\n                                                   color={colorHex} label=\"Example 1\"\n                                                   valueFormatter={value => `${value}%`}/>\n                                        </Col>\n                                        <Col md=\"6\" lg=\"4\">\n                                            <Gauge value={this.state.value} width={200} height={160}\n                                                   label=\"Example 2\" color=\"#3f6ad8\"/>\n                                        </Col>\n                                        <Col md=\"6\" lg=\"4\">\n                                            <Gauge\n                                                value={this.state.value}\n                                                width={200}\n                                                height={160}\n                                                label=\"Example 3\"\n                                                color=\"#3ac47d\"\n                                                valueFormatter={value => {\n                                                    if (value > 80) {\n                                                        return '😁';\n                                                    }\n\n                                                    if (value > 20) {\n                                                        return '😒';\n                                                    }\n\n                                                    return '😣';\n                                                }\n\n                                                }/>\n                                        </Col>\n                                    </Row>\n                                    <div className=\"divider\"/>\n                                    <div className=\"text-center\">\n                                        <input type=\"range\" min=\"0\" max=\"100\"\n                                               value={this.state.value}\n                                               onChange={this.onChange}/>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </CSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}