{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\src\\\\DemoPages\\\\Components\\\\ImageCropper\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { Row, Col, Card, CardBody, CardTitle, Button } from 'reactstrap';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css'; // import {Cropper} from 'react-image-cropper'\n\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport DemoImg from '../../../assets/utils/images/originals/fence-small.jpg'; // const cropper = React.createRef(null);\n\nvar ImageCropExample = /*#__PURE__*/function (_Component) {\n  _inherits(ImageCropExample, _Component);\n\n  function ImageCropExample(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCropExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCropExample).call(this, props));\n    _this.state = {\n      imgSrc: DemoImg,\n      image: '',\n      cropResult: null\n    };\n    _this.cropImage = _this.cropImage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImageCropExample, [{\n    key: \"cropImage\",\n    value: function cropImage() {\n      if (typeof this.cropper.getCroppedCanvas() === 'undefined') {\n        return;\n      }\n\n      this.setState({\n        cropResult: this.cropper.getCroppedCanvas().toDataURL()\n      });\n    }\n  }, {\n    key: \"_crop\",\n    value: function _crop() {// image in dataUrl\n      //  console.log(this.refs.cropper.getCroppedCanvas().toDataURL());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        heading: \"Image Crop\",\n        subheading: \"You can easily crop and edit images with this React plugin.\",\n        icon: \"pe-7s-signal icon-gradient bg-malibu-beach\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(Cropper, {\n        ref: function ref(cropper) {\n          _this2.cropper = cropper;\n        },\n        src: this.state.imgSrc,\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        guides: false,\n        crop: this._crop.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.cropImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 49\n        }\n      }, \"Crop Selection\")), this.state.cropResult ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 57\n        }\n      }, \"Cropped Result\")), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.cropResult,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 53\n        }\n      })) : null)))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, \"Predefined Aspect Ratio\"), /*#__PURE__*/React.createElement(Cropper, {\n        ref: function ref(cropper) {\n          _this2.cropper = cropper;\n        },\n        src: this.state.imgSrc,\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        aspectRatio: 16 / 9,\n        guides: false,\n        crop: this._crop.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.cropImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      }, \"Crop Selection\")), this.state.cropResult ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 57\n        }\n      }, \"Cropped Result\")), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.cropResult,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 53\n        }\n      })) : null)))))));\n    }\n  }]);\n\n  return ImageCropExample;\n}(Component);\n\n;\nexport default ImageCropExample;","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Components/ImageCropper/index.js"],"names":["React","Component","Fragment","CSSTransitionGroup","Row","Col","Card","CardBody","CardTitle","Button","Cropper","PageTitle","DemoImg","ImageCropExample","props","state","imgSrc","image","cropResult","cropImage","bind","cropper","getCroppedCanvas","setState","toDataURL","height","width","_crop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SACIC,GADJ,EACSC,GADT,EAEIC,IAFJ,EAEUC,QAFV,EAGIC,SAHJ,EAGeC,MAHf,QAIO,YAJP;AAKA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,4BAAP,C,CAEA;;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AAEA,OAAOC,OAAP,MAAoB,wDAApB,C,CAEA;;IAEMC,gB;;;AACF,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEJ,OADC;AAETK,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKE,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AAPa;AAQlB;;;;gCAEW;AACR,UAAI,OAAO,KAAKC,OAAL,CAAaC,gBAAb,EAAP,KAA2C,WAA/C,EAA4D;AAC1D;AACD;;AACD,WAAKC,QAAL,CAAc;AACZL,QAAAA,UAAU,EAAE,KAAKG,OAAL,CAAaC,gBAAb,GAAgCE,SAAhC;AADA,OAAd;AAGD;;;4BAGK,CACJ;AACA;AACH;;;6BAGQ;AAAA;;AAEL,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,OAAO,EAAC,YADZ;AAEI,QAAA,UAAU,EAAC,6DAFf;AAGI,QAAA,IAAI,EAAC,4CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAMI,oBAAC,kBAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,cAAc,EAAC,eAFnB;AAGI,QAAA,gBAAgB,EAAE,IAHtB;AAII,QAAA,uBAAuB,EAAE,CAJ7B;AAKI,QAAA,eAAe,EAAE,KALrB;AAMI,QAAA,eAAe,EAAE,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,OAAD;AACI,QAAA,GAAG,EAAE,aAAAH,OAAO,EAAI;AAAE,UAAA,MAAI,CAACA,OAAL,GAAeA,OAAf;AAAyB,SAD/C;AAEI,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,MAFpB;AAGI,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAHX;AAII,QAAA,MAAM,EAAE,KAJZ;AAKI,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWP,IAAX,CAAgB,IAAhB,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,eASI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AACQ,QAAA,OAAO,EAAE,KAAKD,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,CADZ,EASQ,KAAKJ,KAAL,CAAWG,UAAX,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAFJ,eAKI;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,UAFpB;AAGI,QAAA,GAAG,EAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAFJ,GAaM,IAtBd,CATJ,CADJ,CADJ,CADJ,eAwCI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI,oBAAC,OAAD;AACI,QAAA,GAAG,EAAE,aAAAG,OAAO,EAAI;AAAE,UAAA,MAAI,CAACA,OAAL,GAAeA,OAAf;AAAyB,SAD/C;AAEI,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,MAFpB;AAGI,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAHX;AAII,QAAA,WAAW,EAAE,KAAM,CAJvB;AAKI,QAAA,MAAM,EAAE,KALZ;AAMI,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWP,IAAX,CAAgB,IAAhB,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eASI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAUI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AACQ,QAAA,OAAO,EAAE,KAAKD,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,CADZ,EASQ,KAAKJ,KAAL,CAAWG,UAAX,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAFJ,eAKI;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,UAFpB;AAGI,QAAA,GAAG,EAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAFJ,GAaM,IAtBd,CAVJ,CADR,CADA,CAxCJ,CAPJ,CANJ,CADJ;AAkGH;;;;EA/H0BjB,S;;AAgI9B;AAED,eAAeY,gBAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\n\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle, Button\n} from 'reactstrap';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\n// import {Cropper} from 'react-image-cropper'\n\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\n\nimport DemoImg from '../../../assets/utils/images/originals/fence-small.jpg';\n\n// const cropper = React.createRef(null);\n\nclass ImageCropExample extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            imgSrc: DemoImg,\n            image: '',\n            cropResult: null,\n          };\n          this.cropImage = this.cropImage.bind(this);\n    }\n\n    cropImage() {\n        if (typeof this.cropper.getCroppedCanvas() === 'undefined') {\n          return;\n        }\n        this.setState({\n          cropResult: this.cropper.getCroppedCanvas().toDataURL()\n        });\n      }\n\n\n    _crop() {\n        // image in dataUrl\n        //  console.log(this.refs.cropper.getCroppedCanvas().toDataURL());\n    }\n    \n\n    render() {\n        \n        return (\n            <Fragment>\n                <PageTitle\n                    heading=\"Image Crop\"\n                    subheading=\"You can easily crop and edit images with this React plugin.\"\n                    icon=\"pe-7s-signal icon-gradient bg-malibu-beach\"\n                />\n                <CSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Row>\n                        <Col lg=\"6\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Basic</CardTitle>\n                                    <Cropper\n                                        ref={cropper => { this.cropper = cropper; }}\n                                        src={this.state.imgSrc}\n                                        style={{ height: 400, width: '100%' }}\n                                        guides={false}\n                                        crop={this._crop.bind(this)} />\n                                    <div className=\"divider\"/>\n                                    <div className=\"text-center\">\n                                                <div className=\"text-center\">\n                                                <Button color=\"primary\"\n                                                        onClick={this.cropImage}\n                                                    >\n                                                        Crop Selection\n                                                    </Button>\n                                                </div> \n                                                {\n                                            this.state.cropResult\n                                                ?\n                                                <div>\n                                                    <div className=\"divider\"/>\n                                                    <div>\n                                                        <h6>Cropped Result</h6>\n                                                    </div>\n                                                    <img\n                                                        className=\"after-img rounded\"\n                                                        src={this.state.cropResult}\n                                                        alt=\"\"\n                                                    />\n                                                </div>\n                                                : null\n                                        }\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col lg=\"6\">\n                        <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Predefined Aspect Ratio</CardTitle>\n                                    <Cropper\n                                        ref={cropper => { this.cropper = cropper; }}\n                                        src={this.state.imgSrc}\n                                        style={{ height: 400, width: '100%' }}\n                                        aspectRatio={16  / 9}\n                                        guides={false}\n                                        crop={this._crop.bind(this)} />\n                                    <div className=\"divider\"/>\n                                    <div className=\"text-center\">\n                                                <div className=\"text-center\">\n                                                <Button color=\"primary\"\n                                                        onClick={this.cropImage}\n                                                    >\n                                                        Crop Selection\n                                                    </Button>\n                                                </div> \n                                                {\n                                            this.state.cropResult\n                                                ?\n                                                <div>\n                                                    <div className=\"divider\"/>\n                                                    <div>\n                                                        <h6>Cropped Result</h6>\n                                                    </div>\n                                                    <img\n                                                        className=\"after-img rounded\"\n                                                        src={this.state.cropResult}\n                                                        alt=\"\"\n                                                    />\n                                                </div>\n                                                : null\n                                        }\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </CSSTransitionGroup>\n            </Fragment>\n        );\n    }\n};\n\nexport default ImageCropExample;"]},"metadata":{},"sourceType":"module"}