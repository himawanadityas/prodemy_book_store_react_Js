{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\src\\\\DemoPages\\\\Components\\\\ProgressBar\\\\Examples\\\\Advanced\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { Progress } from 'react-sweet-progress';\nimport { Row, Col, Card, CardBody, CardTitle, Button, ButtonGroup, Container } from 'reactstrap';\nimport Circle from 'react-circle';\n\nvar ProgressBarAdvancedExample = /*#__PURE__*/function (_Component) {\n  _inherits(ProgressBarAdvancedExample, _Component);\n\n  function ProgressBarAdvancedExample(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBarAdvancedExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressBarAdvancedExample).call(this, props));\n\n    _this.onDecClick = function () {\n      _this.setState({\n        percent: _this.state.percent - 10 > 0 ? _this.state.percent - 10 : 0\n      });\n    };\n\n    _this.onIncClick = function () {\n      _this.setState({\n        percent: _this.state.percent + 10 < 100 ? _this.state.percent + 10 : 100\n      });\n    };\n\n    _this.state = {\n      percent: props.percent || 55\n    };\n    return _this;\n  }\n\n  _createClass(ProgressBarAdvancedExample, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }, \"Colors\"), /*#__PURE__*/React.createElement(Progress, {\n        className: \"mb-3\",\n        percent: this.state.percent,\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        className: \"mb-3\",\n        percent: this.state.percent,\n        status: \"success\",\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"error\",\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, \"+\"))))), /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, \"Colors\"), /*#__PURE__*/React.createElement(Progress, {\n        percent: this.state.percent,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        theme: {\n          error: {\n            symbol: this.state.percent + '%',\n            trailColor: 'pink',\n            color: 'red'\n          },\n          default: {\n            symbol: this.state.percent + '%',\n            trailColor: 'lightblue',\n            color: 'blue'\n          },\n          active: {\n            symbol: this.state.percent + '%',\n            trailColor: 'yellow',\n            color: 'orange'\n          },\n          success: {\n            symbol: this.state.percent + '%',\n            trailColor: 'lime',\n            color: 'green'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 49\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 49\n        }\n      }, \"+\"))))), /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }\n      }, \"Progress Circle Alternate\"), /*#__PURE__*/React.createElement(Row, {\n        className: \"text-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"100\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"25\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"25\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#6b778c\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 4rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 10 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: true // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"100\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"25\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"25\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"#d92550\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#d92550\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 3rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 10 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: true // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        className: \"ml-3\",\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"60\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"20\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"56\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#6b778c\" // String: Color of percentage text color.\n        ,\n        percentSpacing: 5 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: false // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: false // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Circle, {\n        className: \"ml-3\",\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"70\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"30\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"47\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"#f7b924\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#ccc\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 6rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 5 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: false // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 49\n        }\n      })))))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 41\n        }\n      }, \"Circles\"), /*#__PURE__*/React.createElement(Row, {\n        className: \"text-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        percent: this.state.percent,\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 90,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"success\",\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 92,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"error\",\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 90,\n        strokeWidth: this.props.strokeWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 49\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 49\n        }\n      }, \"+\"))))), /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 41\n        }\n      }, \"Circle variations\"), /*#__PURE__*/React.createElement(Row, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        type: \"circle\",\n        width: 52,\n        percent: 62,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        type: \"circle\",\n        width: 72,\n        percent: 23,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        type: \"circle\",\n        strokeWidth: 2,\n        percent: 70,\n        status: \"error\",\n        width: 92,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Progress, {\n        type: \"circle\",\n        percent: 34,\n        width: 112,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 49\n        }\n      }))))))))));\n    }\n  }]);\n\n  return ProgressBarAdvancedExample;\n}(Component);\n\nexport { ProgressBarAdvancedExample as default };","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Components/ProgressBar/Examples/Advanced/index.js"],"names":["React","Component","Fragment","CSSTransitionGroup","Progress","Row","Col","Card","CardBody","CardTitle","Button","ButtonGroup","Container","Circle","ProgressBarAdvancedExample","props","onDecClick","setState","percent","state","onIncClick","theme","width","strokeWidth","error","symbol","trailColor","color","default","active","success","font"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport {Progress} from 'react-sweet-progress';\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle, Button, ButtonGroup, Container\n} from 'reactstrap';\n\nimport Circle from 'react-circle';\n\nexport default class ProgressBarAdvancedExample extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            percent: props.percent || 55\n        }\n    }\n\n    onDecClick = () => {\n        this.setState({percent: this.state.percent - 10 > 0 ? this.state.percent - 10 : 0});\n    }\n\n    onIncClick = () => {\n        this.setState({percent: this.state.percent + 10 < 100 ? this.state.percent + 10 : 100});\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <CSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Container fluid>\n                        <Row>\n                            <Col md=\"6\">\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>Colors</CardTitle>\n                                        <Progress className=\"mb-3\"\n                                                  percent={this.state.percent}\n                                                  theme={this.props.theme}\n                                                  width={this.props.width}\n                                                  strokeWidth={this.props.strokeWidth}\n                                        />\n                                        <Progress className=\"mb-3\"\n                                                  percent={this.state.percent}\n                                                  status=\"success\"\n                                                  theme={this.props.theme}\n                                                  width={this.props.width}\n                                                  strokeWidth={this.props.strokeWidth}\n                                        />\n                                        <Progress\n                                            percent={this.state.percent}\n                                            status=\"error\"\n                                            theme={this.props.theme}\n                                            width={this.props.width}\n                                            strokeWidth={this.props.strokeWidth}\n                                        />\n                                        <div className=\"text-center mt-3\">\n                                            <ButtonGroup>\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\n                                            </ButtonGroup>\n                                        </div>\n                                    </CardBody>\n\n                                </Card>\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>Colors</CardTitle>\n                                        <Progress\n                                            percent={this.state.percent}\n                                            width={this.props.width}\n                                            strokeWidth={this.props.strokeWidth}\n                                            theme={\n                                                {\n                                                    error: {\n                                                        symbol: this.state.percent + '%',\n                                                        trailColor: 'pink',\n                                                        color: 'red'\n                                                    },\n                                                    default: {\n                                                        symbol: this.state.percent + '%',\n                                                        trailColor: 'lightblue',\n                                                        color: 'blue'\n                                                    },\n                                                    active: {\n                                                        symbol: this.state.percent + '%',\n                                                        trailColor: 'yellow',\n                                                        color: 'orange'\n                                                    },\n                                                    success: {\n                                                        symbol: this.state.percent + '%',\n                                                        trailColor: 'lime',\n                                                        color: 'green'\n                                                    }\n                                                }\n                                            }\n                                        />\n                                        <div className=\"text-center mt-3\">\n                                            <ButtonGroup>\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\n                                            </ButtonGroup>\n                                        </div>\n                                    </CardBody>\n\n                                </Card>\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>\n                                            Progress Circle Alternate\n                                        </CardTitle>\n                                        <Row className=\"text-center mb-3\">\n                                            <Col>\n                                                <Circle\n                                                    animate={true} // Boolean: Animated/Static progress\n                                                    animationDuration=\"1s\" // String: Length of animation\n                                                    responsive={false} // Boolean: Make SVG adapt to parent size\n                                                    size=\"100\" // String: Defines the size of the circle.\n                                                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                                                    progress=\"25\" // String: Update to change the progress and percentage.\n                                                    progressColor=\"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n                                                    bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\n                                                    textColor=\"#6b778c\" // String: Color of percentage text color.\n                                                    textStyle={{\n                                                        font: 'bold 4rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n                                                    }}\n                                                    percentSpacing={10} // Number: Adjust spacing of \"%\" symbol and number.\n                                                    roundedStroke={true} // Boolean: Rounded/Flat line ends\n                                                    showPercentage={true} // Boolean: Show/hide percentage.\n                                                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Circle\n                                                    animate={true} // Boolean: Animated/Static progress\n                                                    animationDuration=\"1s\" // String: Length of animation\n                                                    responsive={false} // Boolean: Make SVG adapt to parent size\n                                                    size=\"100\" // String: Defines the size of the circle.\n                                                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                                                    progress=\"25\" // String: Update to change the progress and percentage.\n                                                    progressColor=\"#d92550\" // String: Color of \"progress\" portion of circle.\n                                                    bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\n                                                    textColor=\"#d92550\" // String: Color of percentage text color.\n                                                    textStyle={{\n                                                        font: 'bold 3rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n                                                    }}\n                                                    percentSpacing={10} // Number: Adjust spacing of \"%\" symbol and number.\n                                                    roundedStroke={true} // Boolean: Rounded/Flat line ends\n                                                    showPercentage={true} // Boolean: Show/hide percentage.\n                                                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Circle className=\"ml-3\"\n                                                        animate={true} // Boolean: Animated/Static progress\n                                                        animationDuration=\"1s\" // String: Length of animation\n                                                        responsive={false} // Boolean: Make SVG adapt to parent size\n                                                        size=\"60\" // String: Defines the size of the circle.\n                                                        lineWidth=\"20\" // String: Defines the thickness of the circle's stroke.\n                                                        progress=\"56\" // String: Update to change the progress and percentage.\n                                                        progressColor=\"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n                                                        bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\n                                                        textColor=\"#6b778c\" // String: Color of percentage text color.\n                                                        percentSpacing={5} // Number: Adjust spacing of \"%\" symbol and number.\n                                                        roundedStroke={true} // Boolean: Rounded/Flat line ends\n                                                        showPercentage={false} // Boolean: Show/hide percentage.\n                                                        showPercentageSymbol={false} // Boolean: Show/hide only the \"%\" symbol.\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Circle className=\"ml-3\"\n                                                        animate={true} // Boolean: Animated/Static progress\n                                                        animationDuration=\"1s\" // String: Length of animation\n                                                        responsive={false} // Boolean: Make SVG adapt to parent size\n                                                        size=\"70\" // String: Defines the size of the circle.\n                                                        lineWidth=\"30\" // String: Defines the thickness of the circle's stroke.\n                                                        progress=\"47\" // String: Update to change the progress and percentage.\n                                                        progressColor=\"#f7b924\" // String: Color of \"progress\" portion of circle.\n                                                        bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\n                                                        textColor=\"#ccc\" // String: Color of percentage text color.\n                                                        textStyle={{\n                                                            font: 'bold 6rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n                                                        }}\n                                                        percentSpacing={5} // Number: Adjust spacing of \"%\" symbol and number.\n                                                        roundedStroke={true} // Boolean: Rounded/Flat line ends\n                                                        showPercentage={true} // Boolean: Show/hide percentage.\n                                                        showPercentageSymbol={false} // Boolean: Show/hide only the \"%\" symbol.\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                            <Col md=\"6\">\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>Circles</CardTitle>\n                                        <Row className=\"text-center mb-3\">\n                                            <Col>\n                                                <Progress\n                                                    percent={this.state.percent}\n                                                    theme={this.props.theme}\n                                                    type=\"circle\"\n                                                    width={90}\n                                                    strokeWidth={this.props.strokeWidth}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Progress\n                                                    percent={this.state.percent}\n                                                    status=\"success\"\n                                                    theme={this.props.theme}\n                                                    type=\"circle\"\n                                                    width={92}\n                                                    strokeWidth={this.props.strokeWidth}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Progress\n                                                    percent={this.state.percent}\n                                                    status=\"error\"\n                                                    theme={this.props.theme}\n                                                    type=\"circle\"\n                                                    width={90}\n                                                    strokeWidth={this.props.strokeWidth}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <div className=\"text-center mt-3\">\n                                            <ButtonGroup>\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\n                                            </ButtonGroup>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>Circle variations</CardTitle>\n                                        <Row className=\"text-center\">\n                                            <Col>\n                                                <Progress\n                                                    type=\"circle\"\n                                                    width={52}\n                                                    percent={62}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Progress\n                                                    type=\"circle\"\n                                                    width={72}\n                                                    percent={23}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Progress\n                                                    type=\"circle\"\n                                                    strokeWidth={2}\n                                                    percent={70}\n                                                    status=\"error\"\n                                                    width={92}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <Progress\n                                                    type=\"circle\"\n                                                    percent={34}\n                                                    width={112}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CSSTransitionGroup>\n            </Fragment>\n        );\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}