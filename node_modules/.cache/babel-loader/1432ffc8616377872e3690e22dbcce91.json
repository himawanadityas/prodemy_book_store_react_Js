{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\src\\\\DemoPages\\\\Components\\\\Notifications\\\\Examples\\\\ToastifyAlerts.js\";\n\nimport React, { Component, Fragment } from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { Row, Col, Card, CardBody, Button, CardTitle, CardFooter } from 'reactstrap';\nimport { ToastContainer, toast, Bounce, Slide, Flip, Zoom } from 'react-toastify';\nvar flags = [{\n  id: 'disableAutoClose',\n  label: 'Disable auto-close'\n}, {\n  id: 'hideProgressBar',\n  label: 'Hide progress bar(less fanciness!)'\n}, {\n  id: 'newestOnTop',\n  label: 'Newest on top*'\n}, {\n  id: 'closeOnClick',\n  label: 'Close on click'\n}, {\n  id: 'pauseOnHover',\n  label: 'Pause delay on hover'\n}, {\n  id: 'pauseOnFocusLoss',\n  label: 'Pause toast when the window loses focus'\n}, {\n  id: 'rtl',\n  label: 'Right to left layout*'\n}, {\n  id: 'draggable',\n  label: 'Allow to drag and close the toast'\n}];\nvar transitions = {\n  bounce: Bounce,\n  slide: Slide,\n  zoom: Zoom,\n  flip: Flip\n};\n\nvar Checkbox = function Checkbox(_ref) {\n  var label = _ref.label,\n      onChange = _ref.onChange,\n      id = _ref.id,\n      checked = _ref.checked;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    name: id,\n    checked: checked,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, label));\n};\n\nvar Radio = function Radio(_ref2) {\n  var options = _ref2.options,\n      name = _ref2.name,\n      onChange = _ref2.onChange,\n      _ref2$checked = _ref2.checked,\n      checked = _ref2$checked === void 0 ? false : _ref2$checked;\n  return Object.keys(options).map(function (k) {\n    var option = options[k];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      key: \"\".concat(name, \"-\").concat(option),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      id: option,\n      type: \"radio\",\n      name: name,\n      value: option,\n      checked: option === checked,\n      onChange: onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, option));\n  });\n}; // function getType(type) {\n//     switch (type) {\n//         case 'default':\n//         default:\n//             return 'toast';\n//         case 'success':\n//             return 'toast.success';\n//         case 'error':\n//             return 'toast.error';\n//         case 'info':\n//             return 'toast.info';\n//         case 'warning':\n//             return 'toast.warn';\n//     }\n// }\n\n\nvar ToastifyAlerts = /*#__PURE__*/function (_Component) {\n  _inherits(ToastifyAlerts, _Component);\n\n  function ToastifyAlerts() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, ToastifyAlerts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToastifyAlerts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = ToastifyAlerts.getDefaultState();\n\n    _this2.handleReset = function () {\n      return _this2.setState(_objectSpread({}, ToastifyAlerts.getDefaultState()));\n    };\n\n    _this2.clearAll = function () {\n      return toast.dismiss();\n    };\n\n    _this2.showToast = function () {\n      return _this2.state.type === 'default' ? toast('This is the default toaster notification box!') : toast[_this2.state.type]('This is a toaster screen notification with dummy color, position and extra texts!');\n    };\n\n    _this2.handleAutoCloseDelay = function (e) {\n      return _this2.setState({\n        autoClose: e.target.value > 0 ? parseInt(e.target.value, 10) : 1\n      });\n    };\n\n    _this2.handleRadioOrSelect = function (e) {\n      return _this2.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this2.toggleCheckbox = function (e) {\n      return _this2.setState(_defineProperty({}, e.target.name, !_this2.state[e.target.name]));\n    };\n\n    return _this2;\n  }\n\n  _createClass(ToastifyAlerts, [{\n    key: \"isDefaultProps\",\n    value: function isDefaultProps() {\n      return this.state.position === 'top-right' && this.state.autoClose === 5000 && !this.state.disableAutoClose && !this.state.hideProgressBar && !this.state.newestOnTop && !this.state.rtl && this.state.pauseOnFocusLoss && this.state.pauseOnHover && this.state.closeOnClick && this.state.draggable;\n    }\n  }, {\n    key: \"renderFlags\",\n    value: function renderFlags() {\n      var _this3 = this;\n\n      return flags.map(function (_ref3) {\n        var id = _ref3.id,\n            label = _ref3.label;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          id: id,\n          className: \"form-check-input\",\n          label: label,\n          onChange: _this3.toggleCheckbox,\n          checked: _this3.state[id],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }\n      }, \"Toastify Configurator\"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 49\n        }\n      }, \"Color States\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        options: toast.TYPE,\n        name: \"type\",\n        checked: this.state.type,\n        onChange: this.handleRadioOrSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 53\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 45\n        }\n      }, \"Options\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 45\n        }\n      }, this.renderFlags())), /*#__PURE__*/React.createElement(Col, {\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 49\n        }\n      }, \"Animation\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"transition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 57\n        }\n      }, \"Transition\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"transition\",\n        id: \"transition\",\n        className: \"form-control\",\n        onChange: this.handleRadioOrSelect,\n        value: this.state.transition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 57\n        }\n      }, Object.keys(transitions).map(function (k) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: k,\n          value: k,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 65\n          }\n        }, k);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"autoClose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 57\n        }\n      }, \"Delay\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        name: \"autoClose\",\n        className: \"form-control\",\n        id: \"autoClose\",\n        value: this.state.autoClose,\n        onChange: this.handleAutoCloseDelay,\n        disabled: this.state.disableAutoClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 57\n        }\n      }))))))), /*#__PURE__*/React.createElement(CardFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        className: \"text-danger\",\n        onClick: this.clearAll,\n        color: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 41\n        }\n      }, \"Clear All\"), /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        className: \"text-primary\",\n        onClick: this.handleReset,\n        color: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 41\n        }\n      }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        color: \"success\",\n        onClick: this.showToast,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 41\n        }\n      }, \"Show Toast\"))))))));\n    }\n  }], [{\n    key: \"getDefaultState\",\n    value: function getDefaultState() {\n      return _objectSpread({}, ToastContainer.defaultProps, {\n        transition: 'bounce',\n        type: 'success',\n        disableAutoClose: false\n      });\n    }\n  }]);\n\n  return ToastifyAlerts;\n}(Component);\n\nexport default ToastifyAlerts;","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Components/Notifications/Examples/ToastifyAlerts.js"],"names":["React","Component","Fragment","CSSTransitionGroup","Row","Col","Card","CardBody","Button","CardTitle","CardFooter","ToastContainer","toast","Bounce","Slide","Flip","Zoom","flags","id","label","transitions","bounce","slide","zoom","flip","Checkbox","onChange","checked","Radio","options","name","Object","keys","map","k","option","ToastifyAlerts","state","getDefaultState","handleReset","setState","clearAll","dismiss","showToast","type","handleAutoCloseDelay","e","autoClose","target","value","parseInt","handleRadioOrSelect","toggleCheckbox","position","disableAutoClose","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","pauseOnHover","closeOnClick","draggable","TYPE","renderFlags","transition","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport {\n    Row, Col,\n    Card, CardBody, Button,\n    CardTitle, CardFooter\n} from 'reactstrap';\n\nimport {\n    ToastContainer,\n    toast,\n    Bounce,\n    Slide,\n    Flip,\n    Zoom\n} from 'react-toastify';\n\nconst flags = [\n    {\n        id: 'disableAutoClose',\n        label: 'Disable auto-close'\n    },\n    {\n        id: 'hideProgressBar',\n        label: 'Hide progress bar(less fanciness!)'\n    },\n    {\n        id: 'newestOnTop',\n        label: 'Newest on top*'\n    },\n    {\n        id: 'closeOnClick',\n        label: 'Close on click'\n    },\n    {\n        id: 'pauseOnHover',\n        label: 'Pause delay on hover'\n    },\n    {\n        id: 'pauseOnFocusLoss',\n        label: 'Pause toast when the window loses focus'\n    },\n    {\n        id: 'rtl',\n        label: 'Right to left layout*'\n    },\n    {\n        id: 'draggable',\n        label: 'Allow to drag and close the toast'\n    }\n];\n\nconst transitions = {\n    bounce: Bounce,\n    slide: Slide,\n    zoom: Zoom,\n    flip: Flip\n};\n\nconst Checkbox = ({label, onChange, id, checked}) => (\n    <div className=\"form-check\">\n        <input\n            id={id}\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name={id}\n            checked={checked}\n            onChange={onChange}\n        />\n        <label className=\"form-check-label\" htmlFor={id}>\n            {label}\n        </label>\n    </div>\n);\n\nconst Radio = ({options, name, onChange, checked = false}) => {\n    return Object.keys(options).map(k => {\n        const option = options[k];\n\n        return (\n            <div className=\"form-check\" key={`${name}-${option}`}>\n                <input\n                    className=\"form-check-input\"\n                    id={option}\n                    type=\"radio\"\n                    name={name}\n                    value={option}\n                    checked={option === checked}\n                    onChange={onChange}\n                />\n                <label className=\"form-check-label\" htmlFor={option}>\n                    {option}\n                </label>\n            </div>\n        );\n    });\n};\n\n// function getType(type) {\n//     switch (type) {\n//         case 'default':\n//         default:\n//             return 'toast';\n//         case 'success':\n//             return 'toast.success';\n//         case 'error':\n//             return 'toast.error';\n//         case 'info':\n//             return 'toast.info';\n//         case 'warning':\n//             return 'toast.warn';\n//     }\n// }\n\nclass ToastifyAlerts extends Component {\n    state = ToastifyAlerts.getDefaultState();\n\n    static getDefaultState() {\n        return {\n            ...ToastContainer.defaultProps,\n            transition: 'bounce',\n            type: 'success',\n            disableAutoClose: false\n        };\n    }\n\n    handleReset = () =>\n        this.setState({\n            ...ToastifyAlerts.getDefaultState()\n        });\n\n    clearAll = () => toast.dismiss();\n\n    showToast = () =>\n        this.state.type === 'default'\n            ? toast('This is the default toaster notification box!')\n            : toast[this.state.type]('This is a toaster screen notification with dummy color, position and extra texts!');\n\n    handleAutoCloseDelay = e =>\n        this.setState({\n            autoClose: e.target.value > 0 ? parseInt(e.target.value, 10) : 1\n        });\n\n    isDefaultProps() {\n        return (\n            this.state.position === 'top-right' &&\n            (this.state.autoClose === 5000 && !this.state.disableAutoClose) &&\n            !this.state.hideProgressBar &&\n            !this.state.newestOnTop &&\n            !this.state.rtl &&\n            this.state.pauseOnFocusLoss &&\n            this.state.pauseOnHover &&\n            this.state.closeOnClick &&\n            this.state.draggable\n        );\n    }\n\n    handleRadioOrSelect = e =>\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n\n    toggleCheckbox = e =>\n        this.setState({\n            [e.target.name]: !this.state[e.target.name]\n        });\n\n    renderFlags() {\n        return flags.map(({id, label}) => (\n            <div key={id}>\n                <Checkbox\n                    id={id}\n                    className=\"form-check-input\"\n                    label={label}\n                    onChange={this.toggleCheckbox}\n                    checked={this.state[id]}\n                />\n            </div>\n        ));\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <CSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Toastify Configurator</CardTitle>\n                                    <Row>\n                                        <Col md=\"2\">\n                                            <div>\n                                                <h5>Color States</h5>\n                                                <div>\n                                                    <Radio\n                                                        options={toast.TYPE}\n                                                        name=\"type\"\n                                                        checked={this.state.type}\n                                                        onChange={this.handleRadioOrSelect}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </Col>\n                                        <Col md=\"4\">\n                                            <h5>Options</h5>\n                                            <div>{this.renderFlags()}</div>\n                                        </Col>\n                                        <Col md=\"3\">\n                                            <div>\n                                                <h5>Animation</h5>\n                                                <div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"transition\">Transition</label>\n                                                        <select\n                                                            name=\"transition\"\n                                                            id=\"transition\"\n                                                            className=\"form-control\"\n                                                            onChange={this.handleRadioOrSelect}\n                                                            value={this.state.transition}\n                                                        >\n                                                            {Object.keys(transitions).map(k => (\n                                                                <option key={k} value={k}>\n                                                                    {k}\n                                                                </option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"autoClose\">Delay</label>\n                                                        <input\n                                                            type=\"number\"\n                                                            name=\"autoClose\"\n                                                            className=\"form-control\"\n                                                            id=\"autoClose\"\n                                                            value={this.state.autoClose}\n                                                            onChange={this.handleAutoCloseDelay}\n                                                            disabled={this.state.disableAutoClose}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                                <CardFooter>\n                                    <div>\n                                        <Button size=\"sm\" className=\"text-danger\" onClick={this.clearAll} color=\"link\">Clear\n                                            All</Button>\n                                        <Button size=\"sm\" className=\"text-primary\" onClick={this.handleReset}\n                                                color=\"link\">Reset</Button>\n                                    </div>\n                                    <div className=\"ml-auto\">\n                                        <Button size=\"lg\" color=\"success\" onClick={this.showToast}>Show Toast</Button>\n                                    </div>\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                </CSSTransitionGroup>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default ToastifyAlerts;"]},"metadata":{},"sourceType":"module"}