{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\src\\\\DemoPages\\\\Elements\\\\Utilities\\\\Examples\\\\ColorStates\\\\ColorSolids.js\";\nimport React, { Fragment } from 'react';\nimport { Tooltip } from 'reactstrap';\n\nvar TooltipItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(TooltipItem, _React$Component);\n\n  function TooltipItem(props) {\n    var _this;\n\n    _classCallCheck(this, TooltipItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TooltipItem).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tooltipOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(TooltipItem, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        tooltipOpen: !this.state.tooltipOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: this.props.item.class,\n        id: 'TooltipC-' + this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        isOpen: this.state.tooltipOpen,\n        target: 'TooltipC-' + this.props.id,\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, this.props.item.text));\n    }\n  }]);\n\n  return TooltipItem;\n}(React.Component);\n\nvar ColorSwatches = /*#__PURE__*/function (_React$Component2) {\n  _inherits(ColorSwatches, _React$Component2);\n\n  function ColorSwatches(props) {\n    var _this2;\n\n    _classCallCheck(this, ColorSwatches);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ColorSwatches).call(this, props));\n    _this2.state = {\n      tooltips: [{\n        text: 'Primary',\n        class: 'swatch-holder swatch-holder-lg bg-primary'\n      }, {\n        text: 'Secondary',\n        class: 'swatch-holder swatch-holder-lg bg-secondary'\n      }, {\n        text: 'Success',\n        class: 'swatch-holder swatch-holder-lg bg-success'\n      }, {\n        text: 'Info',\n        class: 'swatch-holder swatch-holder-lg bg-info'\n      }, {\n        text: 'Warning',\n        class: 'swatch-holder swatch-holder-lg bg-warning'\n      }, {\n        text: 'Danger',\n        class: 'swatch-holder swatch-holder-lg bg-danger'\n      }, {\n        text: 'Focus',\n        class: 'swatch-holder swatch-holder-lg bg-focus'\n      }, {\n        text: 'Alt',\n        class: 'swatch-holder swatch-holder-lg bg-alternate'\n      }, {\n        text: 'Light',\n        class: 'swatch-holder swatch-holder-lg bg-light'\n      }, {\n        text: 'Dark',\n        class: 'swatch-holder swatch-holder-lg bg-dark'\n      }]\n    };\n    return _this2;\n  }\n\n  _createClass(ColorSwatches, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, this.state.tooltips.map(function (tooltip, i) {\n        return /*#__PURE__*/React.createElement(TooltipItem, {\n          key: i,\n          item: tooltip,\n          id: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }\n        });\n      }));\n    }\n  }]);\n\n  return ColorSwatches;\n}(React.Component);\n\nexport default ColorSwatches;","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Elements/Utilities/Examples/ColorStates/ColorSolids.js"],"names":["React","Fragment","Tooltip","TooltipItem","props","toggle","bind","state","tooltipOpen","setState","item","class","id","text","Component","ColorSwatches","tooltips","map","tooltip","i"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,YAAtB;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAJe;AAOlB;;;;6BAEQ;AACL,WAAKC,QAAL,CAAc;AACVD,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,OAAd;AAGH;;;6BAEQ;AACL,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBC,KAAhC;AAAuC,QAAA,EAAE,EAAE,cAAc,KAAKP,KAAL,CAAWQ,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,WAA5B;AAAyC,QAAA,MAAM,EAAE,cAAc,KAAKJ,KAAL,CAAWQ,EAA1E;AAA8E,QAAA,MAAM,EAAE,KAAKP,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWM,IAAX,CAAgBG,IADrB,CAFJ,CADJ;AAQH;;;;EAzBqBb,KAAK,CAACc,S;;IA4B1BC,a;;;AACF,yBAAYX,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AAEA,WAAKG,KAAL,GAAa;AACTS,MAAAA,QAAQ,EAAE,CACN;AACIH,QAAAA,IAAI,EAAE,SADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OADM,EAKN;AACIE,QAAAA,IAAI,EAAE,WADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OALM,EASN;AACIE,QAAAA,IAAI,EAAE,SADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OATM,EAaN;AACIE,QAAAA,IAAI,EAAE,MADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OAbM,EAiBN;AACIE,QAAAA,IAAI,EAAE,SADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OAjBM,EAqBN;AACIE,QAAAA,IAAI,EAAE,QADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OArBM,EAyBN;AACIE,QAAAA,IAAI,EAAE,OADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OAzBM,EA6BN;AACIE,QAAAA,IAAI,EAAE,KADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OA7BM,EAiCN;AACIE,QAAAA,IAAI,EAAE,OADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OAjCM,EAqCN;AACIE,QAAAA,IAAI,EAAE,MADV;AAEIF,QAAAA,KAAK,EAAE;AAFX,OArCM;AADD,KAAb;AAHe;AA+ClB;;;;6BAEQ;AAAA;;AACL,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AACrC,4BACI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,CAAlB;AAAqB,UAAA,IAAI,EAAED,OAA3B;AAAoC,UAAA,EAAE,EAAEC,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJA,CADL,CADJ;AASH;;;;EA5DuBnB,KAAK,CAACc,S;;AA+DlC,eAAeC,aAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {Tooltip} from 'reactstrap';\n\nclass TooltipItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            tooltipOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            tooltipOpen: !this.state.tooltipOpen\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className={this.props.item.class} id={'TooltipC-' + this.props.id}/>\n                <Tooltip isOpen={this.state.tooltipOpen} target={'TooltipC-' + this.props.id} toggle={this.toggle}>\n                    {this.props.item.text}\n                </Tooltip>\n            </Fragment>\n        );\n    }\n}\n\nclass ColorSwatches extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tooltips: [\n                {\n                    text: 'Primary',\n                    class: 'swatch-holder swatch-holder-lg bg-primary'\n                },\n                {\n                    text: 'Secondary',\n                    class: 'swatch-holder swatch-holder-lg bg-secondary'\n                },\n                {\n                    text: 'Success',\n                    class: 'swatch-holder swatch-holder-lg bg-success'\n                },\n                {\n                    text: 'Info',\n                    class: 'swatch-holder swatch-holder-lg bg-info'\n                },\n                {\n                    text: 'Warning',\n                    class: 'swatch-holder swatch-holder-lg bg-warning'\n                },\n                {\n                    text: 'Danger',\n                    class: 'swatch-holder swatch-holder-lg bg-danger'\n                },\n                {\n                    text: 'Focus',\n                    class: 'swatch-holder swatch-holder-lg bg-focus'\n                },\n                {\n                    text: 'Alt',\n                    class: 'swatch-holder swatch-holder-lg bg-alternate'\n                },\n                {\n                    text: 'Light',\n                    class: 'swatch-holder swatch-holder-lg bg-light'\n                },\n                {\n                    text: 'Dark',\n                    class: 'swatch-holder swatch-holder-lg bg-dark'\n                }\n            ]\n        };\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.state.tooltips.map((tooltip, i) => {\n                    return (\n                        <TooltipItem key={i} item={tooltip} id={i}/>\n                    )\n                })}\n            </Fragment>\n        );\n    }\n}\n\nexport default ColorSwatches;\n"]},"metadata":{},"sourceType":"module"}