{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\FullStackTech\\\\architectui-react-pro-1.5.2\\\\architectui-react-pro-1.5.2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport namor from \"namor\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nvar range = function range(len) {\n  var arr = [];\n\n  for (var i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n}; // const [data, setData] = useState([]);\n// const getData = () => {\n//   axios.get(\"http://localhost:1212/api/book\")\n//       .then(res => {\n//           setData(res.data);\n//       })\n// };\n\n\nvar newPerson = function newPerson() {\n  return {\n    firstName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    lastName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100) // status:\n    //     statusChance > 0.66\n    //         ? \"relationship\"\n    //         : statusChance > 0.33 ? \"complicated\" : \"single\"\n\n  };\n};\n\nexport function makeData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  axios.get(\"http://localhost:1212/api/book\").then(function (res) {\n    setData(res.data);\n  });\n  return data.map(function () {\n    return {\n      // ...newPerson(),\n      firstName: 1,\n      lastName: 1,\n      age: 2,\n      visits: 2,\n      progress: 2 // children: range(10).map(newPerson)\n\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/FullStackTech/architectui-react-pro-1.5.2/architectui-react-pro-1.5.2/src/DemoPages/Tables/DataTables/Examples/utils.js"],"names":["namor","axios","useState","range","len","arr","i","push","newPerson","firstName","generate","words","numbers","lastName","age","Math","floor","random","visits","progress","makeData","data","setData","get","then","res","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,GAAG,EAAI;AACjB,MAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACH;;AACD,SAAOD,GAAP;AACH,CAND,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEpB,SAAO;AACHC,IAAAA,SAAS,EAAET,KAAK,CAACU,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CADR;AAEHC,IAAAA,QAAQ,EAAEb,KAAK,CAACU,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CAFP;AAGHE,IAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAHF;AAIHC,IAAAA,MAAM,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAJL;AAKHE,IAAAA,QAAQ,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CALP,CAMH;AACA;AACA;AACA;;AATG,GAAP;AAWH,CAbD;;AAeA,OAAO,SAASG,QAAT,GAAoB;AAAA,kBACClB,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBmB,IADgB;AAAA,MACVC,OADU;;AAEvBrB,EAAAA,KAAK,CAACsB,GAAN,CAAU,gCAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTH,IAAAA,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAP;AACH,GAHL;AAIA,SAAOA,IAAI,CAACK,GAAL,CAAS,YAAM;AAClB,WAAO;AACH;AACAjB,MAAAA,SAAS,EAAE,CAFR;AAGHI,MAAAA,QAAQ,EAAE,CAHP;AAIHC,MAAAA,GAAG,EAAE,CAJF;AAKHI,MAAAA,MAAM,EAAE,CALL;AAMHC,MAAAA,QAAQ,EAAE,CANP,CAOH;;AAPG,KAAP;AASH,GAVM,CAAP;AAWH","sourcesContent":["import namor from \"namor\";\n\nimport axios from \"axios\";\nimport {useState} from \"react\";\nconst range = len => {\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(i);\n    }\n    return arr;\n};\n// const [data, setData] = useState([]);\n// const getData = () => {\n//   axios.get(\"http://localhost:1212/api/book\")\n//       .then(res => {\n//           setData(res.data);\n//       })\n// };\n\nconst newPerson = () => {\n\n    return {\n        firstName: namor.generate({ words: 1, numbers: 0 }),\n        lastName: namor.generate({ words: 1, numbers: 0 }),\n        age: Math.floor(Math.random() * 30),\n        visits: Math.floor(Math.random() * 100),\n        progress: Math.floor(Math.random() * 100),\n        // status:\n        //     statusChance > 0.66\n        //         ? \"relationship\"\n        //         : statusChance > 0.33 ? \"complicated\" : \"single\"\n    };\n};\n\nexport function makeData() {\n    const [data, setData] = useState([]);\n    axios.get(\"http://localhost:1212/api/book\")\n        .then(res => {\n            setData(res.data);\n        });\n    return data.map(() => {\n        return {\n            // ...newPerson(),\n            firstName: 1,\n            lastName: 1,\n            age: 2,\n            visits: 2,\n            progress: 2,\n            // children: range(10).map(newPerson)\n        };\n    });\n}"]},"metadata":{},"sourceType":"module"}